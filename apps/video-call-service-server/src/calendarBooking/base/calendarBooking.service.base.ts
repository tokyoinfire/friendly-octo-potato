/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  CalendarBooking as PrismaCalendarBooking,
} from "@prisma/client";

export class CalendarBookingServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.CalendarBookingCountArgs, "select">
  ): Promise<number> {
    return this.prisma.calendarBooking.count(args);
  }

  async calendarBookings(
    args: Prisma.CalendarBookingFindManyArgs
  ): Promise<PrismaCalendarBooking[]> {
    return this.prisma.calendarBooking.findMany(args);
  }
  async calendarBooking(
    args: Prisma.CalendarBookingFindUniqueArgs
  ): Promise<PrismaCalendarBooking | null> {
    return this.prisma.calendarBooking.findUnique(args);
  }
  async createCalendarBooking(
    args: Prisma.CalendarBookingCreateArgs
  ): Promise<PrismaCalendarBooking> {
    return this.prisma.calendarBooking.create(args);
  }
  async updateCalendarBooking(
    args: Prisma.CalendarBookingUpdateArgs
  ): Promise<PrismaCalendarBooking> {
    return this.prisma.calendarBooking.update(args);
  }
  async deleteCalendarBooking(
    args: Prisma.CalendarBookingDeleteArgs
  ): Promise<PrismaCalendarBooking> {
    return this.prisma.calendarBooking.delete(args);
  }
}
