/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";

import {
  Prisma,
  VideoCallParticipant as PrismaVideoCallParticipant,
  VideoCall as PrismaVideoCall,
  User as PrismaUser,
} from "@prisma/client";

export class VideoCallParticipantServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.VideoCallParticipantCountArgs, "select">
  ): Promise<number> {
    return this.prisma.videoCallParticipant.count(args);
  }

  async videoCallParticipants(
    args: Prisma.VideoCallParticipantFindManyArgs
  ): Promise<PrismaVideoCallParticipant[]> {
    return this.prisma.videoCallParticipant.findMany(args);
  }
  async videoCallParticipant(
    args: Prisma.VideoCallParticipantFindUniqueArgs
  ): Promise<PrismaVideoCallParticipant | null> {
    return this.prisma.videoCallParticipant.findUnique(args);
  }
  async createVideoCallParticipant(
    args: Prisma.VideoCallParticipantCreateArgs
  ): Promise<PrismaVideoCallParticipant> {
    return this.prisma.videoCallParticipant.create(args);
  }
  async updateVideoCallParticipant(
    args: Prisma.VideoCallParticipantUpdateArgs
  ): Promise<PrismaVideoCallParticipant> {
    return this.prisma.videoCallParticipant.update(args);
  }
  async deleteVideoCallParticipant(
    args: Prisma.VideoCallParticipantDeleteArgs
  ): Promise<PrismaVideoCallParticipant> {
    return this.prisma.videoCallParticipant.delete(args);
  }

  async getVideoCall(parentId: string): Promise<PrismaVideoCall | null> {
    return this.prisma.videoCallParticipant
      .findUnique({
        where: { id: parentId },
      })
      .videoCall();
  }

  async getUser(parentId: string): Promise<PrismaUser | null> {
    return this.prisma.videoCallParticipant
      .findUnique({
        where: { id: parentId },
      })
      .user();
  }
}
